name: Publish to Hugo

on:
  # 接收来自其他工作流的触发
  repository_dispatch:
    types: [content-generated]
  
  # 保留手动触发功能
  workflow_dispatch:
    inputs:
      force_publish:
        description: '强制发布（即使没有新内容）'
        required: false
        default: 'false'
        type: boolean

jobs:
  publish_to_hugo:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout 当前仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 检查是否有内容需要发布
        id: check_content
        run: |
          if [ -d "data" ] && [ "$(ls -A data/*.md 2>/dev/null)" ]; then
            echo "has_content=true" >> $GITHUB_OUTPUT
            echo "✅ 发现待发布的内容文件"
            ls -la data/*.md
          else
            echo "has_content=false" >> $GITHUB_OUTPUT
            echo "⚠️ 未发现待发布的内容文件"
          fi

      - name: Checkout Hugo 仓库
        if: steps.check_content.outputs.has_content == 'true' || github.event.inputs.force_publish == 'true'
        uses: actions/checkout@v4
        with:
          repository: hugoflow/producthunt-daily-stack
          token: ${{ secrets.HUGO_PUSH_TOKEN }}
          path: hugo-site
          fetch-depth: 1

      - name: 创建内容目录
        if: steps.check_content.outputs.has_content == 'true' || github.event.inputs.force_publish == 'true'
        run: |
          mkdir -p hugo-site/content/news
          echo "📁 确保内容目录存在"

      - name: 拷贝 md 文件到 Hugo 仓库
        if: steps.check_content.outputs.has_content == 'true' || github.event.inputs.force_publish == 'true'
        run: |
          if [ -f data/*.md ]; then
            cp data/*.md hugo-site/content/news/
            echo "✅ 成功复制内容文件到 Hugo 仓库"
            echo "复制的文件："
            ls -la hugo-site/content/news/
          else
            echo "⚠️ 没有找到要复制的文件"
          fi

      - name: 配置 Git 信息
        if: steps.check_content.outputs.has_content == 'true' || github.event.inputs.force_publish == 'true'
        run: |
          cd hugo-site
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 检查变更并提交
        if: steps.check_content.outputs.has_content == 'true' || github.event.inputs.force_publish == 'true'
        id: commit_changes
        run: |
          cd hugo-site
          
          # 检查是否有变更
          if [ -n "$(git status --porcelain)" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "📝 检测到内容变更"
            git status --short
            
            # 添加并提交变更
            git add content/news/
            git commit -m "auto: publish Product Hunt daily $(date '+%Y-%m-%d %H:%M:%S UTC')"
            echo "✅ 成功提交变更"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ 没有检测到内容变更"
          fi

      - name: 推送到 Hugo 仓库
        if: steps.commit_changes.outputs.has_changes == 'true'
        run: |
          cd hugo-site
          git push
          echo "🚀 成功推送到 Hugo 仓库"

      - name: 发布总结
        run: |
          echo "## 📊 Hugo 发布总结" >> $GITHUB_STEP_SUMMARY
          echo "- **触发方式**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **目标仓库**: hugoflow/producthunt-daily-stack" >> $GITHUB_STEP_SUMMARY
          echo "- **内容路径**: content/news/" >> $GITHUB_STEP_SUMMARY
          echo "- **有内容**: ${{ steps.check_content.outputs.has_content }}" >> $GITHUB_STEP_SUMMARY
          echo "- **有变更**: ${{ steps.commit_changes.outputs.has_changes || 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **执行时间**: $(date)" >> $GITHUB_STEP_SUMMARY

          # 显示发布的内容信息
          if [ "${{ steps.check_content.outputs.has_content }}" == "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📄 发布内容" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Hugo Front Matter (标签、关键词、封面)" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ 优化翻译内容（无翻译说明）" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Product Hunt 精选产品" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ SEO 优化内容" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.commit_changes.outputs.has_changes }}" == "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **状态**: 发布成功到 Hugo 仓库" >> $GITHUB_STEP_SUMMARY
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ **状态**: 无需发布（内容无变更）" >> $GITHUB_STEP_SUMMARY
          fi
